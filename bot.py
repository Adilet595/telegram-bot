import os
import asyncio
from openai import OpenAI 
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
RENDER_URL = os.getenv("RENDER_EXTERNAL_URL")

client = OpenAI(api_key=OPENAI_API_KEY)

FAQ = {
    "–≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã": "–ú—ã –æ—Ç–∫—Ä—ã—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å 10:00 –¥–æ 18:00.",
    "–¥–æ—Å—Ç–∞–≤–∫–∞": "–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –î–µ–Ω–≤–µ—Ä—É ‚Äî $25. –ë–µ—Å–ø–ª–∞—Ç–Ω–æ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç $50.",
    "–∞–¥—Ä–µ—Å": "–ù–∞—à –º–∞–≥–∞–∑–∏–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ –î–µ–Ω–≤–µ—Ä–∞: 1655 Larimer st."
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Ü–≤–µ—Ç–æ—á–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ üå∏\n\n"
        "–¢—ã –º–æ–∂–µ—à—å —Å–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è:\n"
        "- –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã\n"
        "- –î–æ—Å—Ç–∞–≤–∫–∞\n"
        "- –ê–¥—Ä–µ—Å\n\n"
        "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –∑–∞–∫–∞–∑ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–•–æ—á—É –±—É–∫–µ—Ç —Ä–æ–∑\")"
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    for key in FAQ:
        if key in text:
            await update.message.reply_text(FAQ[key])
            return

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": text}]
    )

    reply = response.choices[0].message.content
    await update.message.reply_text(reply)

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

async def main():
    await app.initialize()
    await app.start()
    await app.bot.set_webhook(f"{RENDER_URL}/")
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ Webhook...")
    await asyncio.Event().wait()

if __name__ == '__main__':
    asyncio.run(main())
